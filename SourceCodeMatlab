clc           % version 2; by Carissa, Gabi, and Noor
clear
 
num_of_spins = 5;     % Number of spins
num_of_flips = 10;    % Number of flips
H_field      = 0.00001;      % External H-field
KT           = 4;    % Temperature
J            = 1;      % Spin pair coupling term
 
% find beta
beta         = 1/KT;   % beta = 1 / kT
 
f1 = figure;
f2 = figure;
 
% Randomize spins, -1 or 1
spins = 2*randi(2,num_of_spins,num_of_spins)-3;
%spins = ones(num_of_spins,num_of_spins); 
 
vector_ff = [];
vector_X = [];
 
% start flipping spins randomly
for ff = 1:num_of_flips  
   
    
   Pick_a_spin = [randi(num_of_spins),randi(num_of_spins)]; %chooses random (x,y) spin 
   spin_minus_x  = Pick_a_spin(1) - 1;
   spin_pos_x    = Pick_a_spin(1) + 1;
   spin_minus_y  = Pick_a_spin(2) -1;
   spin_pos_y    = Pick_a_spin(2) +1;
   
  %setting up four nearest neighbors  
   SpinAbove        = [Pick_a_spin(1) spin_pos_y]; 
   SpinBelow        = [Pick_a_spin(1) spin_minus_y];
   SpinLeft         = [spin_minus_x Pick_a_spin(2)];
   SpinRight        = [spin_pos_x Pick_a_spin(2)];
   
        %use toroidal conditions
           if Pick_a_spin(1) == 1
               spin_minus_x = num_of_spins;
           end
           if Pick_a_spin(1) == num_of_spins;
               spin_pos_x   = 1;
           end  
           if Pick_a_spin(2)== 1
               spin_minus_y = num_of_spins;
           end
            if Pick_a_spin(2) == num_of_spins;
               spin_pos_y   = 1;
           end  
   
   
% Energy change when spin flips
   EH = H_field * spins(Pick_a_spin(1), Pick_a_spin(2));
   
   % Energy of pair interactions
   EJ_Above  = J .* (spins(Pick_a_spin(1), Pick_a_spin(2)) .* spins(Pick_a_spin(1), spin_pos_y));
   EJ_Below  = J .* (spins(Pick_a_spin(1), Pick_a_spin(2)) .* spins(Pick_a_spin(1), spin_minus_y));
   EJ_Left   = J .* (spins(Pick_a_spin(1), Pick_a_spin(2)) .* spins(spin_minus_x, Pick_a_spin(2)));
   EJ_Right  = J .* (spins(Pick_a_spin(1), Pick_a_spin(2)) .* spins(spin_pos_x, Pick_a_spin(2)));
   
   
   % Determine the change in energy
   dE = 2.* (EJ_Above + EJ_Below + EJ_Left + EJ_Right + EH);

   
   % if the energy is negative flip the spin
       if dE < 0
           spins(Pick_a_spin(1), Pick_a_spin(2)) = -1 * spins(Pick_a_spin(1), Pick_a_spin(2));
 
       %accounting for probability of the spins without enough energy 
       %that still want to flip
       else
           prob     = exp(-beta * dE); %Prob of spin flip
           myRand   = rand;            %Get a randon number from 0 to 1
           if myRand < prob            %Flip that spin
               spins(Pick_a_spin(1), Pick_a_spin(2)) = -1 * spins(Pick_a_spin(1), Pick_a_spin(2));
           end
       end
 
   n = sum(spins); %adding up x values of spin
   m = sum(n); %adding up y values of spin

 
      %% Plot 
 
    to_plot = (spins + 1)*20;
    image(to_plot)
 
   
    title (sprintf ('m is = %d, T = %f', abs(sum(sum(spins))), (KT./J)));
   
    drawnow

 
         mean_msquared = ((m^2))/((num_of_spins)^2);
         meanm_squared = ((abs(m))/((num_of_spins)^2))^2;
         X = beta.* (mean_msquared - meanm_squared); 

    vector_ff(end + 1) = ff ;
    vector_X(end + 1) = X;

    figure(f2);
    plot(vector_ff,vector_X);
    xlim([0,num_of_flips]);
    title('susceptibility X vs number of flips'); 
         
    
    k = 1.38.*10.^-23;
    C =(num_of_spins).^2 .* k .* (J.*beta).^2 .* (sech(J.*beta)).^2;  
    
 
      
end
